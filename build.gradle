plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
}

repositories {
    mavenCentral()
}

bootJar.enabled = false

subprojects {
    repositories {
        mavenCentral()
    }

    group = 'com.parkingcomestrue'
    version = '0.0.1-SNAPSHOT'

    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'


    dependencies {
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        runtimeOnly 'com.h2database:h2'
        runtimeOnly 'com.mysql:mysql-connector-j'

        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    test {
        useJUnitPlatform()
    }
}

project(':domain') {
    bootJar { enabled = false }
    jar { enabled = true }
}

project(':app-api') {
    bootJar { enabled = true }
}

project(':app-scheduler') {
    bootJar { enabled = true }
}

task collectTestResults(type: Copy) {
    description = 'Collects test results from all subprojects'

    def resultDirs = [
            'domain': "$projectDir/domain/build/test-results/test",
            'app-api': "$projectDir/app-api/build/test-results/test",
            'app-scheduler': "$projectDir/app-scheduler/build/test-results/test"
    ]

    from resultDirs.collect { _, dir ->
        fileTree(dir) {
            include '**/TEST-*.xml'
        }
    }
    into "build/allTestResults"
}

